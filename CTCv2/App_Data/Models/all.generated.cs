using  System;
using  System.Collections.Generic;
using  System.Linq.Expressions;
using  System.Web;
using  Umbraco.Core.Models;
using  Umbraco.Core.Models.PublishedContent;
using  Umbraco.Web;
using  Umbraco.ModelsBuilder;
using  Umbraco.ModelsBuilder.Umbraco;
[assembly: PureLiveAssembly]
[assembly:ModelsBuilderAssembly(PureLive = true, SourceHash = "6d4729d04c70e9aa")]
[assembly:System.Reflection.AssemblyVersion("0.0.0.1")]


// FILE: models.generated.cs

//------------------------------------------------------------------------------
// <auto-generated>
//   This code was generated by a tool.
//
//    Umbraco.ModelsBuilder v3.0.4.0
//
//   Changes to this file will be lost if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------















namespace Umbraco.Web.PublishedContentModels
{
	/// <summary>Global Elements</summary>
	[PublishedContentModel("globalElements")]
	public partial class GlobalElements : PublishedContentModel
	{
#pragma warning disable 0109 // new is redundant
		public new const string ModelTypeAlias = "globalElements";
		public new const PublishedItemType ModelItemType = PublishedItemType.Content;
#pragma warning restore 0109

		public GlobalElements(IPublishedContent content)
			: base(content)
		{ }

#pragma warning disable 0109 // new is redundant
		public new static PublishedContentType GetModelContentType()
		{
			return PublishedContentType.Get(ModelItemType, ModelTypeAlias);
		}
#pragma warning restore 0109

		public static PublishedPropertyType GetModelPropertyType<TValue>(Expression<Func<GlobalElements, TValue>> selector)
		{
			return PublishedContentModelUtility.GetModelPropertyType(GetModelContentType(), selector);
		}

		///<summary>
		/// Footer Message
		///</summary>
		[ImplementPropertyType("footerMessage")]
		public string FooterMessage
		{
			get { return this.GetPropertyValue<string>("footerMessage"); }
		}

		///<summary>
		/// Site Name: test that will appear at the top right of the page
		///</summary>
		[ImplementPropertyType("siteName")]
		public string SiteName
		{
			get { return this.GetPropertyValue<string>("siteName"); }
		}

		///<summary>
		/// Smtp Server
		///</summary>
		[ImplementPropertyType("smtpServer")]
		public string SmtpServer
		{
			get { return this.GetPropertyValue<string>("smtpServer"); }
		}
	}

	/// <summary>Himu Home</summary>
	[PublishedContentModel("himuMaster")]
	public partial class HimuMaster : PublishedContentModel
	{
#pragma warning disable 0109 // new is redundant
		public new const string ModelTypeAlias = "himuMaster";
		public new const PublishedItemType ModelItemType = PublishedItemType.Content;
#pragma warning restore 0109

		public HimuMaster(IPublishedContent content)
			: base(content)
		{ }

#pragma warning disable 0109 // new is redundant
		public new static PublishedContentType GetModelContentType()
		{
			return PublishedContentType.Get(ModelItemType, ModelTypeAlias);
		}
#pragma warning restore 0109

		public static PublishedPropertyType GetModelPropertyType<TValue>(Expression<Func<HimuMaster, TValue>> selector)
		{
			return PublishedContentModelUtility.GetModelPropertyType(GetModelContentType(), selector);
		}
	}

	// Mixin content Type 1083 with alias "himuPanelBase"
	/// <summary>Himu Panel Base</summary>
	public partial interface IHimuPanelBase : IPublishedContent
	{
		/// <summary>Have Menu Item</summary>
		bool HaveMenuItem { get; }

		/// <summary>Menu Title</summary>
		string MenuTitle { get; }

		/// <summary>Text</summary>
		IHtmlString Text { get; }

		/// <summary>Title</summary>
		string Title { get; }
	}

	/// <summary>Himu Panel Base</summary>
	[PublishedContentModel("himuPanelBase")]
	public partial class HimuPanelBase : PublishedContentModel, IHimuPanelBase
	{
#pragma warning disable 0109 // new is redundant
		public new const string ModelTypeAlias = "himuPanelBase";
		public new const PublishedItemType ModelItemType = PublishedItemType.Content;
#pragma warning restore 0109

		public HimuPanelBase(IPublishedContent content)
			: base(content)
		{ }

#pragma warning disable 0109 // new is redundant
		public new static PublishedContentType GetModelContentType()
		{
			return PublishedContentType.Get(ModelItemType, ModelTypeAlias);
		}
#pragma warning restore 0109

		public static PublishedPropertyType GetModelPropertyType<TValue>(Expression<Func<HimuPanelBase, TValue>> selector)
		{
			return PublishedContentModelUtility.GetModelPropertyType(GetModelContentType(), selector);
		}

		///<summary>
		/// Have Menu Item: Should this item appear on the menu
		///</summary>
		[ImplementPropertyType("haveMenuItem")]
		public bool HaveMenuItem
		{
			get { return GetHaveMenuItem(this); }
		}

		/// <summary>Static getter for Have Menu Item</summary>
		public static bool GetHaveMenuItem(IHimuPanelBase that) { return that.GetPropertyValue<bool>("haveMenuItem"); }

		///<summary>
		/// Menu Title: Title that will appear in the menu
		///</summary>
		[ImplementPropertyType("menuTitle")]
		public string MenuTitle
		{
			get { return GetMenuTitle(this); }
		}

		/// <summary>Static getter for Menu Title</summary>
		public static string GetMenuTitle(IHimuPanelBase that) { return that.GetPropertyValue<string>("menuTitle"); }

		///<summary>
		/// Text
		///</summary>
		[ImplementPropertyType("text")]
		public IHtmlString Text
		{
			get { return GetText(this); }
		}

		/// <summary>Static getter for Text</summary>
		public static IHtmlString GetText(IHimuPanelBase that) { return that.GetPropertyValue<IHtmlString>("text"); }

		///<summary>
		/// Title: Panel title
		///</summary>
		[ImplementPropertyType("title")]
		public string Title
		{
			get { return GetTitle(this); }
		}

		/// <summary>Static getter for Title</summary>
		public static string GetTitle(IHimuPanelBase that) { return that.GetPropertyValue<string>("title"); }
	}

	/// <summary>HimuPanels</summary>
	[PublishedContentModel("himuPanels")]
	public partial class HimuPanels : PublishedContentModel
	{
#pragma warning disable 0109 // new is redundant
		public new const string ModelTypeAlias = "himuPanels";
		public new const PublishedItemType ModelItemType = PublishedItemType.Content;
#pragma warning restore 0109

		public HimuPanels(IPublishedContent content)
			: base(content)
		{ }

#pragma warning disable 0109 // new is redundant
		public new static PublishedContentType GetModelContentType()
		{
			return PublishedContentType.Get(ModelItemType, ModelTypeAlias);
		}
#pragma warning restore 0109

		public static PublishedPropertyType GetModelPropertyType<TValue>(Expression<Func<HimuPanels, TValue>> selector)
		{
			return PublishedContentModelUtility.GetModelPropertyType(GetModelContentType(), selector);
		}
	}

	/// <summary>HimuAboutUs</summary>
	[PublishedContentModel("himuAboutUs")]
	public partial class HimuAboutUs : HimuPanels, IHimuPanelBase
	{
#pragma warning disable 0109 // new is redundant
		public new const string ModelTypeAlias = "himuAboutUs";
		public new const PublishedItemType ModelItemType = PublishedItemType.Content;
#pragma warning restore 0109

		public HimuAboutUs(IPublishedContent content)
			: base(content)
		{ }

#pragma warning disable 0109 // new is redundant
		public new static PublishedContentType GetModelContentType()
		{
			return PublishedContentType.Get(ModelItemType, ModelTypeAlias);
		}
#pragma warning restore 0109

		public static PublishedPropertyType GetModelPropertyType<TValue>(Expression<Func<HimuAboutUs, TValue>> selector)
		{
			return PublishedContentModelUtility.GetModelPropertyType(GetModelContentType(), selector);
		}

		///<summary>
		/// Rich Text
		///</summary>
		[ImplementPropertyType("richText")]
		public IHtmlString RichText
		{
			get { return this.GetPropertyValue<IHtmlString>("richText"); }
		}

		///<summary>
		/// Have Menu Item: Should this item appear on the menu
		///</summary>
		[ImplementPropertyType("haveMenuItem")]
		public bool HaveMenuItem
		{
			get { return HimuPanelBase.GetHaveMenuItem(this); }
		}

		///<summary>
		/// Menu Title: Title that will appear in the menu
		///</summary>
		[ImplementPropertyType("menuTitle")]
		public string MenuTitle
		{
			get { return HimuPanelBase.GetMenuTitle(this); }
		}

		///<summary>
		/// Text
		///</summary>
		[ImplementPropertyType("text")]
		public IHtmlString Text
		{
			get { return HimuPanelBase.GetText(this); }
		}

		///<summary>
		/// Title: Panel title
		///</summary>
		[ImplementPropertyType("title")]
		public string Title
		{
			get { return HimuPanelBase.GetTitle(this); }
		}
	}

	/// <summary>HimuBlog</summary>
	[PublishedContentModel("himuBlog")]
	public partial class HimuBlog : HimuPanels, IHimuPanelBase
	{
#pragma warning disable 0109 // new is redundant
		public new const string ModelTypeAlias = "himuBlog";
		public new const PublishedItemType ModelItemType = PublishedItemType.Content;
#pragma warning restore 0109

		public HimuBlog(IPublishedContent content)
			: base(content)
		{ }

#pragma warning disable 0109 // new is redundant
		public new static PublishedContentType GetModelContentType()
		{
			return PublishedContentType.Get(ModelItemType, ModelTypeAlias);
		}
#pragma warning restore 0109

		public static PublishedPropertyType GetModelPropertyType<TValue>(Expression<Func<HimuBlog, TValue>> selector)
		{
			return PublishedContentModelUtility.GetModelPropertyType(GetModelContentType(), selector);
		}

		///<summary>
		/// Have Menu Item: Should this item appear on the menu
		///</summary>
		[ImplementPropertyType("haveMenuItem")]
		public bool HaveMenuItem
		{
			get { return HimuPanelBase.GetHaveMenuItem(this); }
		}

		///<summary>
		/// Menu Title: Title that will appear in the menu
		///</summary>
		[ImplementPropertyType("menuTitle")]
		public string MenuTitle
		{
			get { return HimuPanelBase.GetMenuTitle(this); }
		}

		///<summary>
		/// Text
		///</summary>
		[ImplementPropertyType("text")]
		public IHtmlString Text
		{
			get { return HimuPanelBase.GetText(this); }
		}

		///<summary>
		/// Title: Panel title
		///</summary>
		[ImplementPropertyType("title")]
		public string Title
		{
			get { return HimuPanelBase.GetTitle(this); }
		}
	}

	/// <summary>HimuBlogPanel</summary>
	[PublishedContentModel("himuBlogPanel")]
	public partial class HimuBlogPanel : HimuBlog
	{
#pragma warning disable 0109 // new is redundant
		public new const string ModelTypeAlias = "himuBlogPanel";
		public new const PublishedItemType ModelItemType = PublishedItemType.Content;
#pragma warning restore 0109

		public HimuBlogPanel(IPublishedContent content)
			: base(content)
		{ }

#pragma warning disable 0109 // new is redundant
		public new static PublishedContentType GetModelContentType()
		{
			return PublishedContentType.Get(ModelItemType, ModelTypeAlias);
		}
#pragma warning restore 0109

		public static PublishedPropertyType GetModelPropertyType<TValue>(Expression<Func<HimuBlogPanel, TValue>> selector)
		{
			return PublishedContentModelUtility.GetModelPropertyType(GetModelContentType(), selector);
		}

		///<summary>
		/// Blog Image
		///</summary>
		[ImplementPropertyType("blogImage")]
		public string BlogImage
		{
			get { return this.GetPropertyValue<string>("blogImage"); }
		}

		///<summary>
		/// Full Text
		///</summary>
		[ImplementPropertyType("fullText")]
		public IHtmlString FullText
		{
			get { return this.GetPropertyValue<IHtmlString>("fullText"); }
		}
	}

	/// <summary>HimuClients</summary>
	[PublishedContentModel("himuClients")]
	public partial class HimuClients : HimuPanels, IHimuPanelBase
	{
#pragma warning disable 0109 // new is redundant
		public new const string ModelTypeAlias = "himuClients";
		public new const PublishedItemType ModelItemType = PublishedItemType.Content;
#pragma warning restore 0109

		public HimuClients(IPublishedContent content)
			: base(content)
		{ }

#pragma warning disable 0109 // new is redundant
		public new static PublishedContentType GetModelContentType()
		{
			return PublishedContentType.Get(ModelItemType, ModelTypeAlias);
		}
#pragma warning restore 0109

		public static PublishedPropertyType GetModelPropertyType<TValue>(Expression<Func<HimuClients, TValue>> selector)
		{
			return PublishedContentModelUtility.GetModelPropertyType(GetModelContentType(), selector);
		}

		///<summary>
		/// Have Menu Item: Should this item appear on the menu
		///</summary>
		[ImplementPropertyType("haveMenuItem")]
		public bool HaveMenuItem
		{
			get { return HimuPanelBase.GetHaveMenuItem(this); }
		}

		///<summary>
		/// Menu Title: Title that will appear in the menu
		///</summary>
		[ImplementPropertyType("menuTitle")]
		public string MenuTitle
		{
			get { return HimuPanelBase.GetMenuTitle(this); }
		}

		///<summary>
		/// Text
		///</summary>
		[ImplementPropertyType("text")]
		public IHtmlString Text
		{
			get { return HimuPanelBase.GetText(this); }
		}

		///<summary>
		/// Title: Panel title
		///</summary>
		[ImplementPropertyType("title")]
		public string Title
		{
			get { return HimuPanelBase.GetTitle(this); }
		}
	}

	/// <summary>Himu Client Panel</summary>
	[PublishedContentModel("himuClientPanel")]
	public partial class HimuClientPanel : HimuClients
	{
#pragma warning disable 0109 // new is redundant
		public new const string ModelTypeAlias = "himuClientPanel";
		public new const PublishedItemType ModelItemType = PublishedItemType.Content;
#pragma warning restore 0109

		public HimuClientPanel(IPublishedContent content)
			: base(content)
		{ }

#pragma warning disable 0109 // new is redundant
		public new static PublishedContentType GetModelContentType()
		{
			return PublishedContentType.Get(ModelItemType, ModelTypeAlias);
		}
#pragma warning restore 0109

		public static PublishedPropertyType GetModelPropertyType<TValue>(Expression<Func<HimuClientPanel, TValue>> selector)
		{
			return PublishedContentModelUtility.GetModelPropertyType(GetModelContentType(), selector);
		}

		///<summary>
		/// Client Image
		///</summary>
		[ImplementPropertyType("clientImage")]
		public string ClientImage
		{
			get { return this.GetPropertyValue<string>("clientImage"); }
		}
	}

	/// <summary>HimuContact</summary>
	[PublishedContentModel("himuContact")]
	public partial class HimuContact : HimuPanels, IHimuPanelBase
	{
#pragma warning disable 0109 // new is redundant
		public new const string ModelTypeAlias = "himuContact";
		public new const PublishedItemType ModelItemType = PublishedItemType.Content;
#pragma warning restore 0109

		public HimuContact(IPublishedContent content)
			: base(content)
		{ }

#pragma warning disable 0109 // new is redundant
		public new static PublishedContentType GetModelContentType()
		{
			return PublishedContentType.Get(ModelItemType, ModelTypeAlias);
		}
#pragma warning restore 0109

		public static PublishedPropertyType GetModelPropertyType<TValue>(Expression<Func<HimuContact, TValue>> selector)
		{
			return PublishedContentModelUtility.GetModelPropertyType(GetModelContentType(), selector);
		}

		///<summary>
		/// Address line 1
		///</summary>
		[ImplementPropertyType("addressLine1")]
		public string AddressLine1
		{
			get { return this.GetPropertyValue<string>("addressLine1"); }
		}

		///<summary>
		/// Address Line 2
		///</summary>
		[ImplementPropertyType("addressLine2")]
		public string AddressLine2
		{
			get { return this.GetPropertyValue<string>("addressLine2"); }
		}

		///<summary>
		/// Address Line 3
		///</summary>
		[ImplementPropertyType("addressLine3")]
		public string AddressLine3
		{
			get { return this.GetPropertyValue<string>("addressLine3"); }
		}

		///<summary>
		/// Address Line 4
		///</summary>
		[ImplementPropertyType("addressLine4")]
		public string AddressLine4
		{
			get { return this.GetPropertyValue<string>("addressLine4"); }
		}

		///<summary>
		/// Company Name
		///</summary>
		[ImplementPropertyType("companyName")]
		public string CompanyName
		{
			get { return this.GetPropertyValue<string>("companyName"); }
		}

		///<summary>
		/// Thank You Message
		///</summary>
		[ImplementPropertyType("thankYouMessage")]
		public string ThankYouMessage
		{
			get { return this.GetPropertyValue<string>("thankYouMessage"); }
		}

		///<summary>
		/// Have Menu Item: Should this item appear on the menu
		///</summary>
		[ImplementPropertyType("haveMenuItem")]
		public bool HaveMenuItem
		{
			get { return HimuPanelBase.GetHaveMenuItem(this); }
		}

		///<summary>
		/// Menu Title: Title that will appear in the menu
		///</summary>
		[ImplementPropertyType("menuTitle")]
		public string MenuTitle
		{
			get { return HimuPanelBase.GetMenuTitle(this); }
		}

		///<summary>
		/// Text
		///</summary>
		[ImplementPropertyType("text")]
		public IHtmlString Text
		{
			get { return HimuPanelBase.GetText(this); }
		}

		///<summary>
		/// Title: Panel title
		///</summary>
		[ImplementPropertyType("title")]
		public string Title
		{
			get { return HimuPanelBase.GetTitle(this); }
		}
	}

	/// <summary>HimuOurTeam</summary>
	[PublishedContentModel("himuOurTeam")]
	public partial class HimuOurTeam : HimuPanels, IHimuPanelBase
	{
#pragma warning disable 0109 // new is redundant
		public new const string ModelTypeAlias = "himuOurTeam";
		public new const PublishedItemType ModelItemType = PublishedItemType.Content;
#pragma warning restore 0109

		public HimuOurTeam(IPublishedContent content)
			: base(content)
		{ }

#pragma warning disable 0109 // new is redundant
		public new static PublishedContentType GetModelContentType()
		{
			return PublishedContentType.Get(ModelItemType, ModelTypeAlias);
		}
#pragma warning restore 0109

		public static PublishedPropertyType GetModelPropertyType<TValue>(Expression<Func<HimuOurTeam, TValue>> selector)
		{
			return PublishedContentModelUtility.GetModelPropertyType(GetModelContentType(), selector);
		}

		///<summary>
		/// Have Menu Item: Should this item appear on the menu
		///</summary>
		[ImplementPropertyType("haveMenuItem")]
		public bool HaveMenuItem
		{
			get { return HimuPanelBase.GetHaveMenuItem(this); }
		}

		///<summary>
		/// Menu Title: Title that will appear in the menu
		///</summary>
		[ImplementPropertyType("menuTitle")]
		public string MenuTitle
		{
			get { return HimuPanelBase.GetMenuTitle(this); }
		}

		///<summary>
		/// Text
		///</summary>
		[ImplementPropertyType("text")]
		public IHtmlString Text
		{
			get { return HimuPanelBase.GetText(this); }
		}

		///<summary>
		/// Title: Panel title
		///</summary>
		[ImplementPropertyType("title")]
		public string Title
		{
			get { return HimuPanelBase.GetTitle(this); }
		}
	}

	/// <summary>Himu Team Member</summary>
	[PublishedContentModel("himuTeamMember")]
	public partial class HimuTeamMember : HimuOurTeam
	{
#pragma warning disable 0109 // new is redundant
		public new const string ModelTypeAlias = "himuTeamMember";
		public new const PublishedItemType ModelItemType = PublishedItemType.Content;
#pragma warning restore 0109

		public HimuTeamMember(IPublishedContent content)
			: base(content)
		{ }

#pragma warning disable 0109 // new is redundant
		public new static PublishedContentType GetModelContentType()
		{
			return PublishedContentType.Get(ModelItemType, ModelTypeAlias);
		}
#pragma warning restore 0109

		public static PublishedPropertyType GetModelPropertyType<TValue>(Expression<Func<HimuTeamMember, TValue>> selector)
		{
			return PublishedContentModelUtility.GetModelPropertyType(GetModelContentType(), selector);
		}

		///<summary>
		/// Image
		///</summary>
		[ImplementPropertyType("image")]
		public string Image
		{
			get { return this.GetPropertyValue<string>("image"); }
		}

		///<summary>
		/// Sub Title
		///</summary>
		[ImplementPropertyType("subTitle")]
		public string SubTitle
		{
			get { return this.GetPropertyValue<string>("subTitle"); }
		}
	}

	/// <summary>HimuPortfolio</summary>
	[PublishedContentModel("himuPortfolio")]
	public partial class HimuPortfolio : HimuPanels, IHimuPanelBase
	{
#pragma warning disable 0109 // new is redundant
		public new const string ModelTypeAlias = "himuPortfolio";
		public new const PublishedItemType ModelItemType = PublishedItemType.Content;
#pragma warning restore 0109

		public HimuPortfolio(IPublishedContent content)
			: base(content)
		{ }

#pragma warning disable 0109 // new is redundant
		public new static PublishedContentType GetModelContentType()
		{
			return PublishedContentType.Get(ModelItemType, ModelTypeAlias);
		}
#pragma warning restore 0109

		public static PublishedPropertyType GetModelPropertyType<TValue>(Expression<Func<HimuPortfolio, TValue>> selector)
		{
			return PublishedContentModelUtility.GetModelPropertyType(GetModelContentType(), selector);
		}

		///<summary>
		/// Have Menu Item: Should this item appear on the menu
		///</summary>
		[ImplementPropertyType("haveMenuItem")]
		public bool HaveMenuItem
		{
			get { return HimuPanelBase.GetHaveMenuItem(this); }
		}

		///<summary>
		/// Menu Title: Title that will appear in the menu
		///</summary>
		[ImplementPropertyType("menuTitle")]
		public string MenuTitle
		{
			get { return HimuPanelBase.GetMenuTitle(this); }
		}

		///<summary>
		/// Text
		///</summary>
		[ImplementPropertyType("text")]
		public IHtmlString Text
		{
			get { return HimuPanelBase.GetText(this); }
		}

		///<summary>
		/// Title: Panel title
		///</summary>
		[ImplementPropertyType("title")]
		public string Title
		{
			get { return HimuPanelBase.GetTitle(this); }
		}
	}

	/// <summary>HimuServices</summary>
	[PublishedContentModel("himuServices")]
	public partial class HimuServices : HimuPanels, IHimuPanelBase
	{
#pragma warning disable 0109 // new is redundant
		public new const string ModelTypeAlias = "himuServices";
		public new const PublishedItemType ModelItemType = PublishedItemType.Content;
#pragma warning restore 0109

		public HimuServices(IPublishedContent content)
			: base(content)
		{ }

#pragma warning disable 0109 // new is redundant
		public new static PublishedContentType GetModelContentType()
		{
			return PublishedContentType.Get(ModelItemType, ModelTypeAlias);
		}
#pragma warning restore 0109

		public static PublishedPropertyType GetModelPropertyType<TValue>(Expression<Func<HimuServices, TValue>> selector)
		{
			return PublishedContentModelUtility.GetModelPropertyType(GetModelContentType(), selector);
		}

		///<summary>
		/// Image
		///</summary>
		[ImplementPropertyType("image")]
		public string Image
		{
			get { return this.GetPropertyValue<string>("image"); }
		}

		///<summary>
		/// Have Menu Item: Should this item appear on the menu
		///</summary>
		[ImplementPropertyType("haveMenuItem")]
		public bool HaveMenuItem
		{
			get { return HimuPanelBase.GetHaveMenuItem(this); }
		}

		///<summary>
		/// Menu Title: Title that will appear in the menu
		///</summary>
		[ImplementPropertyType("menuTitle")]
		public string MenuTitle
		{
			get { return HimuPanelBase.GetMenuTitle(this); }
		}

		///<summary>
		/// Text
		///</summary>
		[ImplementPropertyType("text")]
		public IHtmlString Text
		{
			get { return HimuPanelBase.GetText(this); }
		}

		///<summary>
		/// Title: Panel title
		///</summary>
		[ImplementPropertyType("title")]
		public string Title
		{
			get { return HimuPanelBase.GetTitle(this); }
		}
	}

	/// <summary>HimuService</summary>
	[PublishedContentModel("himuService")]
	public partial class HimuService : HimuServices
	{
#pragma warning disable 0109 // new is redundant
		public new const string ModelTypeAlias = "himuService";
		public new const PublishedItemType ModelItemType = PublishedItemType.Content;
#pragma warning restore 0109

		public HimuService(IPublishedContent content)
			: base(content)
		{ }

#pragma warning disable 0109 // new is redundant
		public new static PublishedContentType GetModelContentType()
		{
			return PublishedContentType.Get(ModelItemType, ModelTypeAlias);
		}
#pragma warning restore 0109

		public static PublishedPropertyType GetModelPropertyType<TValue>(Expression<Func<HimuService, TValue>> selector)
		{
			return PublishedContentModelUtility.GetModelPropertyType(GetModelContentType(), selector);
		}

		///<summary>
		/// Font Awesome Icon
		///</summary>
		[ImplementPropertyType("fontAwesomeIcon")]
		public string FontAwesomeIcon
		{
			get { return this.GetPropertyValue<string>("fontAwesomeIcon"); }
		}
	}

	/// <summary>HimuTopPanel</summary>
	[PublishedContentModel("himuTopPanel")]
	public partial class HimuTopPanel : HimuPanels, IHimuPanelBase
	{
#pragma warning disable 0109 // new is redundant
		public new const string ModelTypeAlias = "himuTopPanel";
		public new const PublishedItemType ModelItemType = PublishedItemType.Content;
#pragma warning restore 0109

		public HimuTopPanel(IPublishedContent content)
			: base(content)
		{ }

#pragma warning disable 0109 // new is redundant
		public new static PublishedContentType GetModelContentType()
		{
			return PublishedContentType.Get(ModelItemType, ModelTypeAlias);
		}
#pragma warning restore 0109

		public static PublishedPropertyType GetModelPropertyType<TValue>(Expression<Func<HimuTopPanel, TValue>> selector)
		{
			return PublishedContentModelUtility.GetModelPropertyType(GetModelContentType(), selector);
		}

		///<summary>
		/// Background Image
		///</summary>
		[ImplementPropertyType("backgroundImage")]
		public string BackgroundImage
		{
			get { return this.GetPropertyValue<string>("backgroundImage"); }
		}

		///<summary>
		/// Button Text
		///</summary>
		[ImplementPropertyType("buttonText")]
		public string ButtonText
		{
			get { return this.GetPropertyValue<string>("buttonText"); }
		}

		///<summary>
		/// Link
		///</summary>
		[ImplementPropertyType("link")]
		public string Link
		{
			get { return this.GetPropertyValue<string>("link"); }
		}

		///<summary>
		/// Sub Title
		///</summary>
		[ImplementPropertyType("subTitle")]
		public string SubTitle
		{
			get { return this.GetPropertyValue<string>("subTitle"); }
		}

		///<summary>
		/// Have Menu Item: Should this item appear on the menu
		///</summary>
		[ImplementPropertyType("haveMenuItem")]
		public bool HaveMenuItem
		{
			get { return HimuPanelBase.GetHaveMenuItem(this); }
		}

		///<summary>
		/// Menu Title: Title that will appear in the menu
		///</summary>
		[ImplementPropertyType("menuTitle")]
		public string MenuTitle
		{
			get { return HimuPanelBase.GetMenuTitle(this); }
		}

		///<summary>
		/// Text
		///</summary>
		[ImplementPropertyType("text")]
		public IHtmlString Text
		{
			get { return HimuPanelBase.GetText(this); }
		}

		///<summary>
		/// Title: Panel title
		///</summary>
		[ImplementPropertyType("title")]
		public string Title
		{
			get { return HimuPanelBase.GetTitle(this); }
		}
	}

	/// <summary>Folder</summary>
	[PublishedContentModel("Folder")]
	public partial class Folder : PublishedContentModel
	{
#pragma warning disable 0109 // new is redundant
		public new const string ModelTypeAlias = "Folder";
		public new const PublishedItemType ModelItemType = PublishedItemType.Media;
#pragma warning restore 0109

		public Folder(IPublishedContent content)
			: base(content)
		{ }

#pragma warning disable 0109 // new is redundant
		public new static PublishedContentType GetModelContentType()
		{
			return PublishedContentType.Get(ModelItemType, ModelTypeAlias);
		}
#pragma warning restore 0109

		public static PublishedPropertyType GetModelPropertyType<TValue>(Expression<Func<Folder, TValue>> selector)
		{
			return PublishedContentModelUtility.GetModelPropertyType(GetModelContentType(), selector);
		}

		///<summary>
		/// Contents:
		///</summary>
		[ImplementPropertyType("contents")]
		public object Contents
		{
			get { return this.GetPropertyValue("contents"); }
		}
	}

	/// <summary>Image</summary>
	[PublishedContentModel("Image")]
	public partial class Image : PublishedContentModel
	{
#pragma warning disable 0109 // new is redundant
		public new const string ModelTypeAlias = "Image";
		public new const PublishedItemType ModelItemType = PublishedItemType.Media;
#pragma warning restore 0109

		public Image(IPublishedContent content)
			: base(content)
		{ }

#pragma warning disable 0109 // new is redundant
		public new static PublishedContentType GetModelContentType()
		{
			return PublishedContentType.Get(ModelItemType, ModelTypeAlias);
		}
#pragma warning restore 0109

		public static PublishedPropertyType GetModelPropertyType<TValue>(Expression<Func<Image, TValue>> selector)
		{
			return PublishedContentModelUtility.GetModelPropertyType(GetModelContentType(), selector);
		}

		///<summary>
		/// Size
		///</summary>
		[ImplementPropertyType("umbracoBytes")]
		public string UmbracoBytes
		{
			get { return this.GetPropertyValue<string>("umbracoBytes"); }
		}

		///<summary>
		/// Type
		///</summary>
		[ImplementPropertyType("umbracoExtension")]
		public string UmbracoExtension
		{
			get { return this.GetPropertyValue<string>("umbracoExtension"); }
		}

		///<summary>
		/// Upload image
		///</summary>
		[ImplementPropertyType("umbracoFile")]
		public Umbraco.Web.Models.ImageCropDataSet UmbracoFile
		{
			get { return this.GetPropertyValue<Umbraco.Web.Models.ImageCropDataSet>("umbracoFile"); }
		}

		///<summary>
		/// Height
		///</summary>
		[ImplementPropertyType("umbracoHeight")]
		public string UmbracoHeight
		{
			get { return this.GetPropertyValue<string>("umbracoHeight"); }
		}

		///<summary>
		/// Width
		///</summary>
		[ImplementPropertyType("umbracoWidth")]
		public string UmbracoWidth
		{
			get { return this.GetPropertyValue<string>("umbracoWidth"); }
		}
	}

	/// <summary>File</summary>
	[PublishedContentModel("File")]
	public partial class File : PublishedContentModel
	{
#pragma warning disable 0109 // new is redundant
		public new const string ModelTypeAlias = "File";
		public new const PublishedItemType ModelItemType = PublishedItemType.Media;
#pragma warning restore 0109

		public File(IPublishedContent content)
			: base(content)
		{ }

#pragma warning disable 0109 // new is redundant
		public new static PublishedContentType GetModelContentType()
		{
			return PublishedContentType.Get(ModelItemType, ModelTypeAlias);
		}
#pragma warning restore 0109

		public static PublishedPropertyType GetModelPropertyType<TValue>(Expression<Func<File, TValue>> selector)
		{
			return PublishedContentModelUtility.GetModelPropertyType(GetModelContentType(), selector);
		}

		///<summary>
		/// Size
		///</summary>
		[ImplementPropertyType("umbracoBytes")]
		public string UmbracoBytes
		{
			get { return this.GetPropertyValue<string>("umbracoBytes"); }
		}

		///<summary>
		/// Type
		///</summary>
		[ImplementPropertyType("umbracoExtension")]
		public string UmbracoExtension
		{
			get { return this.GetPropertyValue<string>("umbracoExtension"); }
		}

		///<summary>
		/// Upload file
		///</summary>
		[ImplementPropertyType("umbracoFile")]
		public object UmbracoFile
		{
			get { return this.GetPropertyValue("umbracoFile"); }
		}
	}

	/// <summary>Member</summary>
	[PublishedContentModel("Member")]
	public partial class Member : PublishedContentModel
	{
#pragma warning disable 0109 // new is redundant
		public new const string ModelTypeAlias = "Member";
		public new const PublishedItemType ModelItemType = PublishedItemType.Member;
#pragma warning restore 0109

		public Member(IPublishedContent content)
			: base(content)
		{ }

#pragma warning disable 0109 // new is redundant
		public new static PublishedContentType GetModelContentType()
		{
			return PublishedContentType.Get(ModelItemType, ModelTypeAlias);
		}
#pragma warning restore 0109

		public static PublishedPropertyType GetModelPropertyType<TValue>(Expression<Func<Member, TValue>> selector)
		{
			return PublishedContentModelUtility.GetModelPropertyType(GetModelContentType(), selector);
		}

		///<summary>
		/// Is Approved
		///</summary>
		[ImplementPropertyType("umbracoMemberApproved")]
		public bool UmbracoMemberApproved
		{
			get { return this.GetPropertyValue<bool>("umbracoMemberApproved"); }
		}

		///<summary>
		/// Comments
		///</summary>
		[ImplementPropertyType("umbracoMemberComments")]
		public string UmbracoMemberComments
		{
			get { return this.GetPropertyValue<string>("umbracoMemberComments"); }
		}

		///<summary>
		/// Failed Password Attempts
		///</summary>
		[ImplementPropertyType("umbracoMemberFailedPasswordAttempts")]
		public string UmbracoMemberFailedPasswordAttempts
		{
			get { return this.GetPropertyValue<string>("umbracoMemberFailedPasswordAttempts"); }
		}

		///<summary>
		/// Last Lockout Date
		///</summary>
		[ImplementPropertyType("umbracoMemberLastLockoutDate")]
		public string UmbracoMemberLastLockoutDate
		{
			get { return this.GetPropertyValue<string>("umbracoMemberLastLockoutDate"); }
		}

		///<summary>
		/// Last Login Date
		///</summary>
		[ImplementPropertyType("umbracoMemberLastLogin")]
		public string UmbracoMemberLastLogin
		{
			get { return this.GetPropertyValue<string>("umbracoMemberLastLogin"); }
		}

		///<summary>
		/// Last Password Change Date
		///</summary>
		[ImplementPropertyType("umbracoMemberLastPasswordChangeDate")]
		public string UmbracoMemberLastPasswordChangeDate
		{
			get { return this.GetPropertyValue<string>("umbracoMemberLastPasswordChangeDate"); }
		}

		///<summary>
		/// Is Locked Out
		///</summary>
		[ImplementPropertyType("umbracoMemberLockedOut")]
		public bool UmbracoMemberLockedOut
		{
			get { return this.GetPropertyValue<bool>("umbracoMemberLockedOut"); }
		}

		///<summary>
		/// Password Answer
		///</summary>
		[ImplementPropertyType("umbracoMemberPasswordRetrievalAnswer")]
		public string UmbracoMemberPasswordRetrievalAnswer
		{
			get { return this.GetPropertyValue<string>("umbracoMemberPasswordRetrievalAnswer"); }
		}

		///<summary>
		/// Password Question
		///</summary>
		[ImplementPropertyType("umbracoMemberPasswordRetrievalQuestion")]
		public string UmbracoMemberPasswordRetrievalQuestion
		{
			get { return this.GetPropertyValue<string>("umbracoMemberPasswordRetrievalQuestion"); }
		}
	}

}



// EOF
